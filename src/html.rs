mod button;

use yew::prelude::*;

struct QAItem {
    question: &'static str,
    answer: &'static str,
}

pub(crate) struct ChatItem {
    title: &'static str,
    subtitle: &'static str,
    dialog: Vec<(String, String)>,
}

#[function_component(Header)]
pub(crate) fn header() -> Html {
    html! {
        <div class="container has-text-centered">
          <div class="columns is-vcentered is-multiline">
            <div class="column is-full-mobile is-half-tablet">
              <div class="box">
                <h1 class="title is-1 has-text-weight-bold">
                            { "KubCoin" }
                </h1>
              <h2 class="subtitle is-3 has-text-grey">{ "–¢–µ–ª–µ–≥—Ä–∞–º –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Ö–æ–¥–∞–º–∏ –∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏" }</h2>
              </div>
              <div class="buttons">
                  <button::Start />
                  <button::Group />
                  <button::Channel />
              </div>
            </div>

            <div class="column is-full-mobile is-half-tablet">
              <figure class="image phone-fade" style="max-width: 300px; margin: 0 auto;">
                <img src="images/IMG_3089.JPG" alt="–°–∫—Ä–∏–Ω—à–æ—Ç KubCoin" />
              </figure>
            </div>
          </div>
        </div>
    }
}

#[function_component(Body)]
pub(crate) fn body() -> Html {
    html! {
        <div class="container">
            <Chats />
            <Split />
            <QA />
            <Split />
            <Usage />
        </div>
    }
}

#[function_component(Split)]
pub(crate) fn split() -> Html {
    html! {
       <section class="section">
       </section>
    }
}

#[function_component(Usage)]
pub(crate) fn usage() -> Html {
    html! {
        <div class="container">
            <nav class="level">
              <div class="level-item has-text-centered">
                <div>
                  <p class="heading">{ "Total usage" }</p>
                  <p class="title">{ 8 }</p>
                </div>
              </div>
              <div class="level-item has-text-centered">
                <div>
                  <p class="heading">{ "On-premise" }</p>
                  <p class="title">{ 1 }</p>
                </div>
              </div>
              <div class="level-item has-text-centered">
                <div>
                  <p class="heading">{ "Followers" }</p>
                  <p class="title">{ "1K" }</p>
                </div>
              </div>
              <div class="level-item has-text-centered">
                <div>
                  <p class="heading">{ "Likes" }</p>
                  <p class="title">{ 789 }</p>
                </div>
              </div>
            </nav>
        </div>
    }
}

#[function_component(QA)]
fn qa() -> Html {
    let items = [
        QAItem {
            question: "–ß—Ç–æ —Ç–∞–∫–æ–µ KubCoin?",
            answer: "KubCoin ‚Äî —ç—Ç–æ —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏—á–Ω—ã–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏. –û–Ω –ø–æ–º–æ–≥–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞—Ç—ã.",
        },
        QAItem {
            question: "–ú–æ–∂–Ω–æ –ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å KubCoin –Ω–∞ —Å–≤–æ—ë–º —Å–µ—Ä–≤–µ—Ä–µ?",
            answer: "–î–∞! –í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å KubCoin –ª–æ–∫–∞–ª—å–Ω–æ (on-premise) –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö. –í–∞—à–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å ‚Äî —Ç–æ–ª—å–∫–æ –≤ –≤–∞—à–∏—Ö —Ä—É–∫–∞—Ö.",
        },
    ];

    let open_index = use_state(|| None);

    html! {
        <div class="container">
            { for items.iter().enumerate().map(|(idx, item)| {
                let is_open = *open_index == Some(idx);
                let on_click = {
                    let open_index = open_index.clone();
                    Callback::from(move |_| {
                        if is_open {
                            open_index.set(None);
                        } else {
                            open_index.set(Some(idx));
                        }
                    })
                };
                html! {
                    <div class={classes!("box", if is_open { "is-active" } else { "" })}>
                        <div class="content is-medium" onclick={on_click} style="cursor: pointer;">
                            <strong>{ item.question }</strong>
                        </div>
                        <div class="content" style={if is_open { "display: block;" } else { "display: none;" }}>
                            { item.answer }
                        </div>
                    </div>
                }
            }) }
        </div>
    }
}

#[function_component(Chats)]
pub(crate) fn chats() -> Html {
    let items = [
        ChatItem {
            title: "–î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã",
            subtitle: "KubCoin –¥–æ–±–∞–≤–∏—Ç –æ–ø–µ—Ä–∞—Ü–∏—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö",
            dialog: vec![
                (
                    String::from("/start"),
                    String::from(
                        r#"
‚úÖ –í—Å—ë –≥–æ—Ç–æ–≤–æ!

–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–ø–∏—Å–∏, –≤–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –≤–µ—Å—Ç–∏ —É—á—ë—Ç –≤–º–µ—Å—Ç–µ! üöÄ

üîß –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:
-100 –µ–¥–∞ // –ø–æ–∫—É–ø–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
1000-560 —Ä–∞–±–æ—Ç–∞
-1500 –¥—Ä—É–≥–æ–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ -1500
100+150-10 –∏–ª–∏ $ 100/3 + 500 - (123+67)
/report –∏–ª–∏ /report 5 ‚Äî –æ—Ç—á—ë—Ç –∑–∞ —Ç–µ–∫—É—â–∏–π –∏–ª–∏ 5-–π –º–µ—Å—è—Ü

–í–≤–µ–¥–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞.
"#,
                    ),
                ),
                (
                    String::from("-1540 –ï–¥–∞ // –û–±–µ–¥"),
                    String::from(
                        r#"
üìÜ –î–µ–Ω—å/–ú–µ—Å—è—Ü: 450‚ÇΩ / 100350‚ÇΩ
( -1540 –ï–¥–∞ )

‚úì‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!
–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: 358f9cb4
–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞: 689aa259
"#,
                    ),
                ),
            ],
        },
        ChatItem {
            title: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã",
            subtitle: "KubCoin —É–º–µ–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –æ–ø–µ—Ä–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é `!`",
            dialog: vec![
                (
                    String::from("!"),
                    String::from(
                        r#"
üìÜ –î–µ–Ω—å/–ú–µ—Å—è—Ü: -1090‚ÇΩ / 98810‚ÇΩ
( -1540 –ï–¥–∞ )

‚úì‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!
–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: c70ee2a9
–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞: 0fb31b86
"#,
                    ),
                ),
                (
                    String::from("-500"),
                    String::from(
                        r#"
üìÜ –î–µ–Ω—å/–ú–µ—Å—è—Ü: -1590‚ÇΩ / 98310‚ÇΩ
( -500 –ï–¥–∞ )

‚úì‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!
–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: 81cac754
–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞: c3a507a1
"#,
                    ),
                ),
            ],
        },
        ChatItem {
            title: "–í—ã–≤–æ–¥–∏ –æ—Ç—á–µ—Ç –∑–∞ –º–µ—Å—è—Ü",
            subtitle: "KubCoin —É–º–µ–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç –ø–æ –º–µ—Å—è—Ü–∞–º –∏ –¥–∞—Ç–∞–º",
            dialog: vec![(
                String::from("/report"),
                String::from(
                    r#"
üìà –î–æ—Ö–æ–¥—ã –∑–∞ 10/2025
–†–∞–±–æ—Ç–∞: 440‚ÇΩ
–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞: 10000‚ÇΩ
---

–ò—Ç–æ–≥–æ: 10440‚ÇΩ

üìâ –†–∞—Å—Ö–æ–¥—ã –∑–∞ 10/2025
–ï–¥–∞: 1600‚ÇΩ
–î—Ä—É–≥–æ–µ: 1500‚ÇΩ
---

–ò—Ç–æ–≥–æ: 3100‚ÇΩ

–û—Å—Ç–∞—Ç–æ–∫: 7340‚ÇΩ
"#,
                ),
            )],
        },
        ChatItem {
            title: "–ò—Å–ø–æ–ª—å–∑—É–π –ò–ò –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π",
            subtitle: "KubCoin —É–º–µ–µ—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ",
            dialog: vec![
                (
                    String::from("# –õ–µ–Ω–∞ –∫—É–ø–∏–ª–∞ —É –º–µ–Ω—è –Ω–∞ 1000 —Ä—É–±–ª–µ–π —Ü–≤–µ—Ç—ã"),
                    String::from(
                        r#"
üìÜ –î–µ–Ω—å/–ú–µ—Å—è—Ü: 1000‚ÇΩ / 1000‚ÇΩ
( +1000 –î—Ä—É–≥–æ–µ )

‚úì‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!
–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: d9b710cd
–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞: faf35c78
"#,
                    ),
                ),
                (
                    String::from("< –ì–û–õ–û–°–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï >"),
                    String::from(
                        r#"
üìÜ –î–µ–Ω—å/–ú–µ—Å—è—Ü: 2000‚ÇΩ / 2000‚ÇΩ
( +1000 –î—Ä—É–≥–æ–µ )

‚úì‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞!
–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: b776a48b
–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞: f7da958d
"#,
                    ),
                ),
            ],
        },
        ChatItem {
            title: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ—Ç–Ω–æ–π –∫–Ω–∏–≥–æ–π",
            subtitle: "KubCoin –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –≤–∞—à–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏",
            dialog: vec![
                (
                    String::from("/unregister"),
                    String::from(
                        r#"
‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.

–í—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ,
–µ—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞.

–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ:
/register
"#,
                    ),
                ),
                (
                    String::from("/register"),
                    String::from(
                        r#"
‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!

üìò –ö–Ω–∏–≥–∞ —É—á—ë—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ —á–∞—Ç—É.
–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.

–ù–∞—á–Ω–∏—Ç–µ —Å:
/help ‚Äî —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞.
–∏–ª–∏ /start ‚Äî —á—Ç–æ–±—ã —Å—Ä–∞–∑—É –Ω–∞—á–∞—Ç—å –≤–≤–æ–¥–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏.
"#,
                    ),
                ),
            ],
        },
        ChatItem {
            title: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã",
            subtitle: "KubCoin –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
            dialog: vec![
                (
                    String::from("/support"),
                    String::from(
                        r#"
üì¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
–ï—Å–ª–∏ –∑–∞–º–µ—Ç–∏–ª–∏ –æ—à–∏–±–∫—É, –µ—Å—Ç—å –∏–¥–µ—è –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –æ–±—Å—É–¥–∏—Ç—å ‚Äî –ø–∏—à–∏—Ç–µ:

‚úâÔ∏è –ü–æ—á—Ç–∞: <i@itmage.ru>
üí¨ Telegram: @iTmagelab –∏–ª–∏ –ö–∞–Ω–∞–ª: @iTmagelab_ru

–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏!
"#,
                    ),
                ),
                (
                    String::from("/donate"),
                    String::from(
                        r#"
–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞! ‚ù§Ô∏è
"#,
                    ),
                ),
            ],
        },
    ];
    html! {
        <>
            { for items.chunks(2).map(|pair| html! {
                <div class="columns is-multiline">
                    <div class="column">
                    </div>
                    { for pair.iter().map(|item| html! {
                        <div class="column is-one-third">
                            { chat(item) }
                        </div>
                    }) }
                    <div class="column">
                    </div>
                </div>
            }) }
        </>
    }
}

pub(crate) fn chat(chat: &ChatItem) -> Html {
    html! {
        <div class="container" style="border: 1px solid #ccc; padding: 1rem; border-radius: 8px;">
            <div class="title"><p>{ chat.title }</p></div>
            <div class="subtitle"><p>{ chat.subtitle }</p></div>

            { for chat.dialog.iter().map(|(req, ans)| {
            html! {
            <>
                <div class="block is-flex is-justify-content-flex-end">
                    <div class="box" style="max-width: 60%;">
                        <p>{ req }</p>
                    </div>
                </div>
                <div class="block is-flex is-justify-content-flex-start">
                    <pre class="box" style="margin: 0; white-space: pre-wrap; word-wrap: break-word; overflow-wrap: anywhere;">{ ans }</pre>
                </div>
            </>
            }

            }) }
        </div>
    }
}

#[function_component(Footer)]
pub(crate) fn footer() -> Html {
    html! {
        <footer class="footer">
            <div class="content has-text-centered">
                <div class="content has-text-centered">
                    <p>{ "¬© iTmageLAB. All rights reserved." }</p>
                </div>
            </div>
        </footer>
    }
}
